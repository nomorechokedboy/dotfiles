{
        "workbench.iconTheme": "material-icon-theme",
        // Prettier
        "editor.formatOnSave": true,
        "editor.lineHeight": 2,
        "prettier.singleQuote": true,
        "security.workspace.trust.untrustedFiles": "open",
        "files.exclude": {
                "**/.classpath": true,
                "**/.factorypath": true,
                "**/.project": true,
                "**/.settings": true,
                "**/build": true,
                "**/dist": true,
                "**/out": true
        },
        "editor.defaultFormatter": "esbenp.prettier-vscode",
        "[svelte]": {
                "editor.defaultFormatter": "svelte.svelte-vscode"
        },
        "svelte.enable-ts-plugin": true,
        "[rust]": {
                "editor.defaultFormatter": "rust-lang.rust-analyzer"
        },
        "editor.suggestSelection": "first",
        "vsintellicode.modify.editor.suggestSelection": "automaticallyOverrodeDefaultValue",
        "liveServer.settings.donotShowInfoMsg": true,
        "extensions.ignoreRecommendations": true,
        "vim.easymotion": true,
        "vim.incsearch": true,
        "vim.useSystemClipboard": true,
        "vim.useCtrlKeys": true,
        "vim.hlsearch": true,
        "vim.sneak": true,
        "vim.normalModeKeyBindings": [
                {
                        "before": ["<leader>", "d"],
                        "after": ["d", "d"]
                },
                {
                        "before": ["<tab>"],
                        "commands": ["workbench.action.nextEditor"]
                },
                {
                        "before": ["<S-tab>"],
                        "commands": ["workbench.action.previousEditor"]
                }
        ],
        "vim.insertModeKeyBindings": [
                {
                        "before": ["j", "k"],
                        "after": ["<Esc>"]
                },
                {
                        "before": ["<C-j>"],
                        "after": ["<Esc>"]
                },
                {
                        "before": ["<C-k>"],
                        "after": ["<Esc>"]
                }
        ],
        "vim.visualModeKeyBindings": [
                {
                        "before": [">"],
                        "after": [">", "g", "v"]
                },
                {
                        "before": ["<"],
                        "after": ["<", "g", "v"]
                }
        ],
        "vim.normalModeKeyBindingsNonRecursive": [
                {
                        "before": ["<leader>", "d"],
                        "after": ["d", "d"]
                },
                {
                        "before": ["<C-n>"],
                        "commands": [":nohl"]
                },
                {
                        "before": ["<leader>", "w"],
                        "commands": ["workbench.action.splitEditor"]
                },
                {
                        "before": ["<leader>", "e"],
                        "commands": ["workbench.action.toggleSidebarVisibility"]
                },
                {
                        "before": ["<leader>", "f"],
                        "commands": ["revealInExplorer"]
                },
                {
                        "before": ["<leader>", "h"],
                        "after": ["_"]
                },
                {
                        "before": ["<leader>", "l"],
                        "after": ["$"]
                }
        ],
        "vim.leader": "<space>",
        "vim.handleKeys": {
                // "<C-a>": false,
                "<C-f>": false,
                // VS Code new marker @ next occurence
                // "<C-d>": false,
                // Copy
                // "<C-c>": false,
                // "<C-x>": false,
                // Paste
                // "<C-v>": false,
                // "<C-z>": false,
                "<C-p>": false,
                "<C-y>": false
        },
        "emmet.triggerExpansionOnTab": true,
        "emmet.includeLanguages": {
                "javascript": "javascriptreact",
                "postcss": "css"
        },
        "editor.wordWrap": "on",
        "editor.wordWrapColumn": 120,
        "redhat.telemetry.enabled": true,
        "terminal.integrated.fontFamily": "MesloLGS NF",
        "terminal.integrated.defaultProfile.linux": "zsh (2)",
        "terminal.integrated.profiles.linux": {
                "zsh": {
                        "path": "zsh"
                },
                "zsh (login)": {
                        "path": "zsh",
                        "args": ["-l"]
                },
                "zsh (2)": {
                        "path": "/usr/bin/zsh"
                }
        },
        //Vscode color brackets
        "editor.bracketPairColorization.enabled": true,
        "code-runner.clearPreviousOutput": true,
        "workbench.colorTheme": "One Dark Pro Darker",
        "discord.lowerDetailsNoWorkspaceFound": "Vscopium Lightsaber",
        "discord.lowerDetailsEditing": "Vscopium Lightsaber",
        "discord.lowerDetailsIdling": "Vscopium Lightsaber",
        "discord.detailsIdling": "Vscopium Lightsaber",
        "discord.largeImageIdling": "Vscopium Lightsaber",
        "explorer.confirmDragAndDrop": false,
        "javascript.updateImportsOnFileMove.enabled": "always",
        "[scss]": {
                "editor.suggest.insertMode": "replace"
        },
        "javascript.inlayHints.parameterTypes.enabled": true,
        "javascript.inlayHints.variableTypes.enabled": true,
        "typescript.inlayHints.parameterTypes.enabled": true,
        "typescript.inlayHints.variableTypes.enabled": true,
        "typescript.updateImportsOnFileMove.enabled": "always",
        "files.watcherExclude": {
                "**/.git/objects/**": true,
                "**/.git/subtree-cache/**": true,
                "**/node_modules/*/**": true,
                "**/.hg/store/**": true,
                "**/build/**": true,
                "**/out/**": true,
                "**/dist/**": true
        },
        "debug.openDebug": "openOnDebugBreak",

        "[dart]": {
                // Automatically format code on save and during typing of certain characters
                // (like `;` and `}`).
                "editor.formatOnSave": true,
                "editor.formatOnType": true,

                // Draw a guide line at 80 characters, where Dart's formatting will wrap code.
                "editor.rulers": [80],

                // Disables built-in highlighting of words that match your selection. Without
                // this, all instances of the selected text will be highlighted, interfering
                // with Dart's ability to highlight only exact references to the selected variable.
                "editor.selectionHighlight": false,

                // By default, VS Code prevents code completion from popping open when in
                // "snippet mode" (editing placeholders in inserted code). Setting this option
                // to `false` stops that and allows completion to open as normal, as if you
                // weren't in a snippet placeholder.
                "editor.suggest.snippetsPreventQuickSuggestions": false,

                // By default, VS Code will pre-select the most recently used item from code
                // completion. This is usually not the most relevant item.
                //
                // "first" will always select top item
                // "recentlyUsedByPrefix" will filter the recently used items based on the
                //     text immediately preceding where completion was invoked.
                "editor.suggestSelection": "first",

                // Allows pressing <TAB> to complete snippets such as `for` even when the
                // completion list is not visible.
                "editor.tabCompletion": "onlySnippets",

                // By default, VS Code will populate code completion with words found in the
                // current file when a language service does not provide its own completions.
                // This results in code completion suggesting words when editing comments and
                // strings. This setting will prevent that.
                "editor.wordBasedSuggestions": "off",
                "editor.defaultFormatter": "Dart-Code.dart-code"
        },
        "window.titleBarStyle": "custom",
        "dart.flutterSdkPath": "/home/hadius/packages/flutter",
        "editor.cursorBlinking": "smooth",
        "editor.cursorSmoothCaretAnimation": "on",
        "workbench.startupEditor": "none",
        "explorer.confirmDelete": false,
        "svelte.plugin.svelte.note-new-transformation": false,
        "terminal.integrated.enableMultiLinePasteWarning": false,
        "tailwindCSS.emmetCompletions": true,
        "editor.inlineSuggest.enabled": true,
        "editor.quickSuggestions": {
                "strings": true
        },
        "css.validate": false,
        "window.menuBarVisibility": "compact",
        "vitest.enable": true,
        "editor.tabSize": 8,
        "prettier.tabWidth": 8,
        "editor.lineNumbers": "relative",
        "[go]": {
                "editor.defaultFormatter": "golang.go"
        },
        "go.toolsManagement.autoUpdate": true,
        "diffEditor.ignoreTrimWhitespace": false,
        "terminal.sourceControlRepositoriesKind": "external",
        "workbench.activityBar.location": "hidden"
}
